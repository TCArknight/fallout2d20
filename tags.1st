<?xml version="1.0" encoding="UTF-8"?>

<!-- This file contains the definitions of all tag groups and tags that are used
      throughout the Skeleton data files. These elements relied upon by numerous
      other facets of the data files and must be processed first during compilation,
      so they are placed in a file with a ".1st" extension.
-->

<document signature="Hero Lab Structure">

  <!-- The "group" elements define tag groups that consist of an assortment of tags.
        These tags can be assigned throughout the data files and referenced via scripts
        and tag expressions to orchestrate all the behaviors you need.
  -->

  <!-- Helper group - general helper tags used internally only
        This group is where you can put a variety of tags that don't really belong in
        any other group - it's kind of a "miscellaneous" group. The key requirement is
        that tags in this group should never be intended for access by the user, as
        they are for internal use only. Another important detail is that you cannot
        ever establish any ordering of things based on Helper tags, since any number
        of Helper tags can be assigned to any particular thing.
  -->
  <group
    id="Helper">
    <value id="Bootstrap"/>   		<!-- Identifies a pick that must be bootstrapped for every hero -->
    <value id="Displace"/>    		<!-- Pick should be displaced if it is designated for displacement -->
    <value id="Shadow"/>      		<!-- Pick should be displaced if it is designated for shadowing -->
    <value id="Maximum"/>     		<!-- Ability has reached its maximum level and cannot be improved -->
    <value id="Minimum"/>     		<!-- Ability has reached its minimum level and cannot be decreased -->
    <value id="NoDelete"/>    		<!-- Indicates the pick cannot be deleted because another selection precludes it -->
    <value id="Activated"/>   		<!-- Indicates an in-play adjustment or ability that has been activated -->
    <value id="Disabled"/>   		 <!-- Indicates the pick cannot be deleted because another selection precludes it -->
    <value id="NoMove"/>      		<!-- Identifies gear that cannot be transferred between actors -->
    <value id="UserAdjust"/>  		<!-- Identifies a user-added adjustment -->
    <value id="BadStrReq"/>   		<!-- Identifies a weapon that has failed its minimum strength requirement -->
    <value id="MaxLevel"/>    		<!-- Tracker reset value is the maximum instead of the minimum -->
    <value id="ResetMax"/>    		<!-- Tracker reset value is the maximum instead of the minimum -->
    <value id="NoReset"/>     		<!-- Tracker value does not possess a reset button -->
    <value id="NoMaxBound"/>  		<!-- Tracker user value is not bounded at the maximum end -->
    <value id="NoMinBound"/>  		<!-- Tracker user value is not bounded at the minimum end -->
    <value id="NoMinimum"/>   		<!-- Resource does NOT need to be fully spent to avoid reporting a warning -->
    <value id="CustomItem"/>  		<!-- Identifies a thing that has a user customizable name -->
    <value id="NoPersText"/>  		<!-- User entered no background text -->
    <value id="FirstCopy"/>   		<!-- This pick is the first copy of the trait -->
    <value id="OnlyCopy"/>   		<!-- This pick is the only copy of the component -->
    <value id="MultiCopy"/>   		<!-- This pick is one of multiple of the component -->
    <value id="SpecUp"/>      		<!-- This pick is an additional copy of the same trait -->
    <value id="CostRebate"/>      	<!-- This pick is an additional copy of the same trait -->
    <value id="FusCoreInstalled"/>	 
    <value id="MinionCantBeLive"/> 
    <value id="NoSkillValue"/> 
    <value id="StartValue4"/> 
    <value id="StartValue5"/> 
    <value id="StartValue6"/> 
    <value id="StartValue7"/> 
    <value id="StartValue8"/> 
    </group>

  <!-- User group - general helper tags that can be assigned by users via the Editor
        Any tags that you would normally put in the Helper group, but that you also
        want to make visible to the user within the Editor, should be placed here.
        This group has the same limitation as the Helper group in that you can never
        user this group for ordering within a sortset.
  -->
  <group
    id="User">
    <value id="CreateOnly"/>  <!-- Whether an ability is selectable only during creation -->
    <value id="Activation"/>  <!-- Whether an ability can be activated to invoke dynamic changes -->
    <value id="NeedDomain"/>  <!-- Whether an ability requires the user to specify a domain -->
    <value id="NoAutoName"/>  <!-- Whether to not automatically amend the naming of a pick with selections -->
    <value id="Resistance"/>  <!-- Identifies a resistance trait -->
    <value id="Health"/>       <!-- Identifies a power trait -->
    <value id="Power"/>       <!-- Identifies a power trait -->
    <value id="Combat"/>      <!-- Identifies a combat trait -->
    <value id="DamageDice"/>      <!-- Identifies a combat trait -->
    <value id="PerkForTrait"/>	<!-- Used for an origin tht can select a Perk in place of a Trait -->
    <value id="SelectTrait"/>	<!-- Used for an origin tht can select a Trait from a list -->
    <value id="MisterHandy"/>	<!-- Item is for Mr Handy -->
    </group>

  <!-- Hero group - Helper tags assigned exclusively to the hero/actor
        Sometimes you'll have tags that need to be assigned to hero instead of to
        individual things. Those tags should be kept distinct from normal Helper or
        User tags and defined as Hero tags. The benefit of doing this is that tags
        are immediately obvious as to their role based on the group they belong to.
  -->
  <group
    id="Hero">
    <value id="Dead"/>        	<!-- Indicates hero is dead or otherwise out of combat -->
    <value id="NoDamage"/>    	<!-- Indicates no damage history exists for the hero -->
    <value id="Hand"/>       	<!-- Each tag indicates one hand worth of weapons equipped -->
    <value id="RerollInit"/>  	<!-- Indicates that the hero can re-roll initiative values -->
    <value id="NoOrigin"/> 
    <value id="NoCarry"/> 
    <value id="SetOrigin"/> 
    <value id="SkillLimit4"/> 	<!-- Indicates skill maximum value. if not present, defaults to 10 -->
    <value id="Minion"/>
    <value id="NoUnarmed"/>
    <value id="IsRobot"/>		<!-- Indicates hero is a Robot (i.e. Mr Handy, Protectron, etc.) -->
    <value id="NoCarryStr"/>  	<!-- Indicates that the hero doesn't add strength to Carry Weight -->
    <value id="HalfCarryStr"/>	<!-- Indicates that the hero doesn't add strength to Carry Weight -->
    <value id="RadImmune"/>		<!-- Indicates that the hero is Immune to Radiation Damage -->
    <value id="PoiImmune"/>		<!-- Indicates that the hero is Immune to Radiation Damage -->
    <value id="Encumbered"/> 
    </group>
	
  <group
    id="HeroType">
    <value id="PC"/> 
    <value id="NPC"/> 
    <value id="Creature"/> 
    </group>
  <!-- DashTacCon group - behaviors associated with the Dashboard and/or Tactical Console
        All tags that control behaviors relating to the Dashboard or TacCon should be
        defined in this group.
  -->
  <group
    id="DashTacCon">
    <value id="Special"/>     <!-- Whether to show pick within the "Special" mouse-over -->
    <value id="Rolls"/>       <!-- Whether to show pick within the "Rolls" mouse-over -->
    <value id="Combat"/>      <!-- Whether to show pick within the "Combat" mouse-over -->
    <value id="NonCombat"/>   <!-- Whether to show pick within the list of "NonCombat" information on the TacCon -->
    <value id="Traits"/>      <!-- Whether to show pick in the "traits" column on the TacCon -->
    </group>

  <!-- Equipment group - helper tags specific to equipment
        Any tags associated with equipment of all varieties should be defined in
        this group.
  -->
  <group
    id="Equipment">
    <value id="Hide" 		name="Hide equipment from purchase"/>        	<!-- Identifies equipment that is concealed from purchasing -->
    <value id="Hand" 		name="Requires one or more hands"/>          	<!-- Identifies equipment that requires hands to use -->
    <value id="NoHands" 	name="Requires no hands"/>          			<!-- Identifies equipment that doesn't require hands to use -->
    <value id="TwoHand" 	name="Requires two hands"/>               		<!-- Identifies equipment that is two-handed -->
    <value id="StartEquip"	name="Gear starts out equipped"/>      			<!-- Identifies equipment that is equipped by default -->
    <value id="AutoEquip"	name="Gear is auto-equipped"/>          		<!-- Identifies equipment that is automatically equipped (e.g. natural attacks) -->
    <value id="Natural" 	name="Natural weapon/armor/etc."/>        		<!-- Identifies equipment that is a natural form and exempt from various behaviors -->
    <value id="Outfit" 		name="Equipment is considered an Outfit"/>		<!-- Identifies equipment that requires hands to use -->
    <value id="ModRequired"	name="Gear requires modification selection"/>	<!-- This gear requires modification -->
    </group>

  <!-- Weapon group - helper tags for weapon special abilities
        If a tag is used to indicate a special ability for a weapon, it should be
        defined in this group.
  -->
  <group
    id="Weapon">
    <value id="SpecRange" name="Range is special"/>               <!-- Identifies a weapon with a special range -->
    </group>

  <!-- InPlay group - tags used to control behaviors associated with in-play effects
        Behaviors that govern in-play adjustments, permanenent adjustments, or other
        in-play effects belong in the group.
  -->
  <group
    id="InPlay">
    <value id="PermOK"/>      <!-- Identifies an in-play adjustment that *can* be permanent -->
    <value id="TempOK"/>      <!-- Identifies an in-play adjustment that *can* be temporary -->
    <value id="Permanent"/>   <!-- Identifies a permanent in-play adjustment -->
    <value id="Temporary"/>   <!-- Identifies a temporary in-play adjustment -->
    </group>

  <!-- Print group - tags used to control printed output
        There will typically be a variety of print-centric tags once your data files
        are fleshed out with multiple dossiers and sophisticated character sheets.
        All such tags should be defined in this group.
  -->
  <group
    id="Print">
    <value id="NoPrint"/>     <!-- Indicates the pick should not be included in printouts -->
    </group>

  <!-- HideTab group - controls which tabs are visible for the character
        Every tab and summary panel has a "live" tagexpr that tests for the tag that
        corresponds to the panel. Consequently, every such panel should have a tag
        defined for it below. You can then assign the proper tags to the hero so that
        the matching panels are hidden for the hero. This can really extremely useful
        in game systems like World of Darkness, where you can have multiple typs of
        heroes (e.g. vampires, ghosts, mortals) and different tabs should appear for
        each type.
  -->
  <group
    id="HideTab">
    <value id="origin"/>
    <value id="basics"/>
    <value id="abilities"/>
    <value id="armory"/>
    <value id="gear"/>
    <value id="advances"/>
    <value id="personal"/>
    <value id="combat"/>
    <value id="journal"/>
    <value id="inplay"/>
    <value id="special"/>
    <value id="smBasics"/>
    <value id="smAbility"/>
    <value id="smArmory"/>
    <value id="smStatbl"/>
    </group>

  <!-- Hide group - controls whether things are hidden in certain contexts
        In the same way that the HideTab group controls which panels are made visible
        for a given character, the Hide group controls the visibiliy of individual
        things based on particular character types and/or settings. When a thing must
        be hidden in a particular context, define a tag for that context here and test
        for it within that context. Then simply assign the tag to the any thing that
        must be hidden.
  -->
  <group
    id="Hide">
    <value id="Attribute"/>       <!-- Indicates an attribute that is not user selectable -->
    <value id="Skill"/>           <!-- Indicates a skill that is not user selectable -->
    <value id="Trait"/>           <!-- Indicates a derived trait that is hidden from view -->
    <value id="InPlay"/>          <!-- Indicates an in-play adjustment that is hidden from view -->
    <value id="Ability"/>         <!-- Indicates an ability that is not user selectable (i.e. conferred by race or similar mechanism) -->
    <value id="Special"/>         <!-- Indicates a trait that is hidden from the Special tab -->
    <value id="Perk"/>            <!-- Indicates an perk that is not user selectable (i.e. conferred by race or similar mechanism) -->
    <value id="Tracker"/>         <!-- Indicates a tracker that is hidden from the In-Play tab (and likely shown somewhere else) -->
    <value id="OriginChoose"/>    
    </group>

  <!-- Show group - controls whether things are shown in certain contexts
        This group is the analog of the Hide group. Normally, things will always be
        visible except in certain situations, in which case the Hide group is ideal.
        In the rare situation where things must be hidden except in certain cases,
        the Show group comes in handy.
  -->
  <group
    id="Show">
    <value id="dummy"/>   <!-- replace this tag when you define a real context -->
    </group>

  <!-- Promote group - controls whether an item is promoted to the top
        This group should only ever have the one tag. If the tag is assigned to a
        thing, it has been promoted to the top of the list. By having this tag in its
        own group, the group can be readily used within a sortset so that promoted
        items are shown first.
  -->
  <group
    id="Promote">
    <value id="Top"/>
    </group>

  <!-- Armory group - controls order in which armor and weapons are shown
        Each type of weapon/armor must be assigned one of these tags to dictate its
        basic nature (this is done by via the components). Once assigned, this group
        can be used within a sortset to sequence the equipment in a consistent order.

        Since this group is used for sorting and the different equipment types don't
        lend themselves to a natural sort order based on their names, we assign an
        explicit sort order value to each tag and designate the entire group as
        having an "explicit" sequencing behavior.
  -->
  <group
    id="Armory"
    sequence="explicit">
    <value id="Clothing" order="0"/>
    <value id="Armor" order="1"/>
    <value id="Shield" order="2"/>
    <value id="Melee" order="3"/>
    <value id="Range" order="4"/>
    </group>

  <!-- Equipped group - used for sorting equipped weapons first
        This group should only ever have the one tag. If the tag is assigned to a
        thing, it has been equipped by the actor. By having this tag in its own
        group, the group can be readily used within a sortset so that equipped items
        are shown first.
  -->
  <group
    id="Equipped">
    <value id="Equipped"/>    <!-- Identifies weapons and armor that are equipped -->
    </group>

  <!-- AdjustShow group - tags associated with display of in-play adjustments
        Different adjustments can be configured by the user in different ways, and
        there is one AdjustShow tag for each such way. Each adjustment must be
        assigned tags corresponding to the different customizations that the user
        can apply to that adjustment.
  -->
  <group
    id="AdjustShow">
    <value id="Increment"/>   <!-- adjustment has an incrementer -->
    <value id="Info"/>        <!-- adjustment has an info button -->
    <value id="Menu"/>        <!-- adjustment has a required menu selection -->
    </group>

  <!-- Adjustment group - type of adjustment being applied
        Adjustments have an identity tag and there is the shared 'Fixed' tag. If you
        need categories of adjustments, you can define appropriate tags here.
  -->
  <group
    id="Adjustment"
    dynamic="yes">
    <value id="Fixed"/>       <!-- identifies a fixed value adjustment that the user can't modify -->
    </group>

  <!-- DomainTerm group - tags defining the term to use for "domain" for a given thing
        The "Domain" component is designed to be generic. As such, it needs to be able
        to be adapted, and these tags dictate the term use for a "domain" within a
        particular thing. You can assign the tag to a component to change the term for
        all things based on that component. If not tag is assigned, "Domain" is used.
  -->
  <group
    id="DomainTerm"
    dynamic="yes">
    <value id="Domain"/>      <!-- default term use for a domain -->
    </group>

  <!-- SimpleItem group - tags associated with use of the SimpleItem template
        The "SimpleItem" template is designed to be generic. As such, it needs to be
        able to be adapted by an author in reasonable ways, and these tags allow for
        that customization.
  -->
  <group
    id="SimpleItem"
    dynamic="yes">
    <value id="width0"/>      <!-- use default width behavior for showing things when choosing -->
    <value id="CenterName"/>  <!-- center the name, instead of left-aligning it -->
    </group>

  <!-- ChooseSrc1 and ChooseSrc2 - tags used for menu selection behaviors
        The "UserSelect" component and "UserSelect" template orchestrate the handling
        of menu selections for individual picks within a table. The menu choices can
        be pulled from a list of things, picks on the current container, or picks on
        the hero. These tag groups allow the source to be specified for each of the
        two separate menus supported by the mechanism.
        NOTE! Omitting a tag defaults to the "Hero" behavior.
  -->
  <group
    id="ChooseSrc1"
    visible="no">
    <value id="Thing" name="All Things"/>
    <value id="Container" name="All Picks on Container"/>
    <value id="Hero" name="All Picks on Hero"/>
    </group>
  <group
    id="ChooseSrc2"
    visible="no"
    inherit="ChooseSrc1">
    </group>

  <!-- SpecialTab group - used for sort order control on Special tab
        Every type of thing that is reported on the Special tab needs to be assigned
        a unique sort order so that all of the information shown on the Special tab
        is organized consistently for the user. This group provides an appropriate
        set of tags for that purpose.

        Since this group is used for sorting and the different types of things don't
        lend themselves to a natural sort order based on their names, we assign an
        explicit sort order value to each tag and designate the entire group as
        having an "explicit" sequencing behavior.
  -->
  <group
    id="SpecialTab"
    sequence="explicit">
    <value id="Ability" order="10"/>
    <value id="Perk" order="20"/>
    <value id="Unknown" order="80"/>
    </group>

  <group
    id="Perk"
    dynamic="yes">
    <value id="IsRanked" name="Is Ranked" />
    </group>

  <group
    id="PerkSelected"
    dynamic="yes">
    <value id="Dummy" name="Dummy" />
    </group>
	
  <group
    id="Skill"
    dynamic="yes">
    <value id="TagSkill"/>      <!-- default term use for a domain -->
    </group>

  <!-- HitLocations group - helper tags for body locations
       Humanoid - Head, Torso, ArmLeft, ArmRight, LegLeft, LegRight
	   Mr. Handy - Optics, MainBody, Arm1, Arm2, Arm3, Thruster
  -->
  <group
    id="HitLocation"
    sequence="explicit">
    <value id="Optics" 		name="Optics" 		abbrev="O"  order="5"/>		<!-- Head Armor -->
    <value id="Head" 		name="Head" 		abbrev="H"  order="5"/>		<!-- Head Armor -->
    <value id="MainBody" 	name="Main Body" 	abbrev="MB" order="15"/>	<!-- Torso Armor -->
    <value id="Torso" 		name="Torso" 		abbrev="T"  order="15"/>	<!-- Torso Armor -->
    <value id="ArmLeft" 	name="Arm (Left)" 	abbrev="LA" order="25"/>	<!-- Arm Armor -->
    <value id="ArmRight" 	name="Arm (Right)" 	abbrev="RA" order="25"/>	<!-- Arm Armor -->
    <value id="Arm1" 		name="Arm 1" 		abbrev="A1" order="25"/>	<!-- Arm Armor -->
    <value id="Arm2" 		name="Arm 2" 		abbrev="A2" order="25"/>	<!-- Arm Armor -->
    <value id="Arm3" 		name="Arm 3" 		abbrev="A3" order="25"/>	<!-- Arm Armor -->
    <value id="Arm4" 		name="Arm 4" 		abbrev="A4" order="25"/>	<!-- Arm Armor -->
    <value id="Thruster" 	name="Thruster" 	abbrev="TH" order="35"/>	<!-- Leg Armor -->
    <value id="LegLeft" 	name="Leg (Left)" 	abbrev="LL" order="35"/>	<!-- Leg Armor -->
    <value id="LegRight" 	name="Leg (Right)" 	abbrev="RL" order="35"/>	<!-- Leg Armor -->
    <value id="Leg1" 		name="Leg 1" 		abbrev="L1" order="35"/>	<!-- Arm Armor -->
    <value id="Leg2" 		name="Leg 2" 		abbrev="L2" order="35"/>	<!-- Arm Armor -->
    <value id="Leg3" 		name="Leg 3" 		abbrev="L3" order="35"/>	<!-- Arm Armor -->
    <value id="Leg4" 		name="Leg 4" 		abbrev="L4" order="35"/>	<!-- Arm Armor -->
    </group>
	
  <!-- Weapon Type tags -->
  <group
    id="WeaponType"
    sequence="explicit"
	dynamic="yes">
    <value id="SmallGun" name="Small Guns" order="10" />
    <value id="EnergyWpn" name="Energy Weapons" order="20" />
    <value id="BigGun" name="Big Guns" order="30" />
    <value id="Bow" name="Bows" order="40" />
    <value id="MeleeWpn" name="Melee Weapons" order="50" />
    <value id="Unarmed" name="Unarmed" order="50" />
    <value id="Throwing" name="Throwing" order="60" />
    <value id="Explosive" name="Explosives" order="70" />
    </group>
	
  <!-- Weapon Type tags -->
  <group
    id="Effect"
	dynamic="yes">
    <value id="Burst" />
    <value id="Breaking" />
    <value id="Persistent" />
    <value id="PersistentE" name="Persistent (Energy)"/>
    <value id="Piercing1" name="Piercing 1"/>
    <value id="Piercing2" name="Piercing 2"/>
    <value id="Piercing3" name="Piercing 3"/>
    <value id="Piercing4" name="Piercing 4"/>
    <value id="Piercing5" name="Piercing 5"/>
    <value id="Radioactive" />
    <value id="Spread" />
    <value id="Stun" />
    <value id="Vicious" />
    </group>

  <!-- Weapon Type tags -->
  <group
    id="Quality"
	dynamic="yes">
    <value id="Accurate" />
    <value id="AmmoHungry1" name="Ammo-Hungry (1)" />
    <value id="AmmoHungry2" name="Ammo-Hungry (2)" />
    <value id="AmmoHungry3" name="Ammo-Hungry (3)" />
    <value id="AmmoHungry4" name="Ammo-Hungry (4)" />
    <value id="AmmoHungry5" name="Ammo-Hungry (5)" />
    <value id="Blast" />
    <value id="Bombard" />
    <value id="CQ" name="Close Quarters" />
    <value id="Concealed" />
    <value id="Debilitating" />
    <value id="Delay1" name="Delay (1)" />
    <value id="Delay2" name="Delay (2)" />
    <value id="Delay3" name="Delay (3)" />
    <value id="Delay4" name="Delay (4)" />
    <value id="Delay5" name="Delay (5)" />
    <value id="Gatling" />
    <value id="Inaccurate" />
    <value id="Mine" />
    <value id="NV" name="Night Vision" />
    <value id="Parry" />
    <value id="Placed" />
    <value id="Recoil1" name="Recoil (1)" />
    <value id="Recoil2" name="Recoil (2)" />
    <value id="Recoil3" name="Recoil (3)" />
    <value id="Recoil4" name="Recoil (4)" />
    <value id="Recoil5" name="Recoil (5)" />
    <value id="Recoil6" name="Recoil (6)" />
    <value id="Recon" />
    <value id="Reliable" />
    <value id="SlowLoad" name="Slow Load" />
    <value id="Suppressed" />
    <value id="Surge" />
    <value id="ThrownC" name="Thrown (C)" />
    <value id="ThrownM" name="Thrown (M)" />
    <value id="TwoHanded" name="Two-Handed" />
    <value id="Unreliable" />
    </group>	
	
  <!-- Damage Type tags -->
  <group
    id="DamageType"
	dynamic="yes">
    <value id="Physical" abbrev="Ph" />
    <value id="Energy" abbrev="En" />
    <value id="Radiation" abbrev="Ra" />
    <value id="Poison" abbrev="Po" />
    </group>
	
  <!-- Damage Value override tags -->
  <group
    id="DamageOverride">
    <value id="1" />
    <value id="2" />
    <value id="3" />
    <value id="4" />
    <value id="5" />
    <value id="6" />
    <value id="7" />
    <value id="8" />
    <value id="9" />
    <value id="10" />
    </group>	
	
  <!-- Weapon Range tags -->
  <group
    id="Range"
    sequence="explicit">
    <value id="Close" 	abbrev="C" order="1" />
    <value id="Medium" 	abbrev="M" order="2" />
    <value id="Long" 	abbrev="L" order="3" />
    <value id="Extreme" abbrev="X" order="4" />
    <value id="Special" abbrev="S" order="5" />
    </group>	
	
  <group
    id="PowerArmorPart"
    sequence="explicit">
    <value id="Frame" 	order="1" />
    <value id="Core" 	order="2" />
    <value id="Helm" 	order="3" />
    <value id="Chest"	order="4" />
    <value id="Arm" 	order="5" />
    <value id="Leg" 	order="6" />
    </group>	
	
  <group
    id="PowerArmorType"
    sequence="explicit">
    <value id="Frame" 	name="Frame"	order="1" />
    <value id="Raider" 	name="Raider"	order="2" />
    <value id="T45" 	name="T-45"		order="3" />
    <value id="T51"		name="T-51"		order="4" />
    <value id="T60" 	name="T-60"		order="5" />
    <value id="X01" 	name="X-01"		order="6" />
    </group>
	
  <!-- GeatType group - used for sorting equipped weapons first
        This group should only ever have the one tag. If the tag is assigned to a
        thing, it has been equipped by the actor. By having this tag in its own
        group, the group can be readily used within a sortset so that equipped items
        are shown first.
  -->
  <group
    id="ArmorType"
    sequence="explicit">
    <value id="ApparelClothing" name="Clothing"        	order="10"/>	<!--  -->
    <value id="ApparelOutfit"   name="Outfit"          	order="20"/>	<!--  -->
    <value id="ApparelHeadgear" name="Headgear"        	order="30"/>   	<!--  -->
    <value id="ArmorRaider"     name="Raider Armor"    	order="40" />	<!--  -->
    <value id="ArmorLeather"    name="Leather Armor"   	order="50" />	<!--  -->
    <value id="ArmorMetal"      name="Metal Armor"     	order="60" />	<!--  -->
    <value id="ArmorCombat"     name="Combat Armor"    	order="70" />	<!--  -->
    <value id="ArmorSynth"      name="Synth Armor"     	order="80" />	<!--  -->
    <value id="ArmorVaultTec"   name="Vault-Tec Armor" 	order="90" />	<!--  -->
    <value id="ArmorWood"      	name="Wood Armor"     	order="100" />	<!--  -->
    <value id="ArmorPower"      name="Power Armor"     	order="110" />	<!--  -->
    <value id="ArmorRobot"      name="Robot Armor"     	order="120" />	<!--  -->
    </group>
	
  <!-- ArmorLoc group - helper tags for armor location
        If a tag is used to indicate a special ability for a weapon, it should be
        defined in this group.
  -->
  <group
    id="ArmorLoc"
    sequence="explicit"
	inherit="HitLocation">
    </group>

  <!-- ArmorLoc group - helper tags for armor location
        If a tag is used to indicate a special ability for a weapon, it should be
        defined in this group.
  -->
  <group
    id="ArmorWornOn"
    sequence="explicit"
	inherit="HitLocation">
    </group>
	
  <!-- Damage Type tags -->
  <group
    id="ArmorSpecial"
	dynamic="yes">
    <value id="None"/>
    </group>
	
  <group
    id="MinionType"
    dynamic="yes">
    <value id="PC"/>		<!-- Minion is a PC -->
    <value id="NPC"/>		<!-- Minion is an NPC -->
    <value id="Creature"/>	<!-- Minion is a Creature -->
    <value id="Vehicle"/>	<!-- Minion is a Vehicle -->
    </group>
	
  <group
    id="Creature"
    dynamic="yes">
    <value id="Standard"/>     
    </group>	
		
  <group
    id="CreatureQuality"
    dynamic="yes">
    <value id="Normal" name="Normal"/>   
    <value id="Mighty" name="Mighty"/>   
    <value id="Legend" name="Legendary"/>     
    </group>

  <group
    id="RobotBody"
    dynamic="yes">
    <value id="ModuleAllowed"	name="Module Allowed"/>   
    <value id="Head" 			name="Head"/>   
    <value id="Body" 			name="Body"/>   
    <value id="Arm" 			name="Arm"/>   
    <value id="Leg" 			name="Leg"/>     
    </group>
	
  <group
    id="Keyword"
    dynamic="yes"
    sequence="explicit">
    <value id="Robot" 									order="05" />  
    <value id="Mutated" 								order="05" /> 
    <value id="Brotherhood"	name="Brotherhood of Steel"	order="40" /> 
    <value id="Human" 									order="50" />   
    <value id="Ghoul" 									order="50" /> 
    <value id="SuperMutant" name="Super Mutant" 		order="50" /> 
    <value id="Mammal" 									order="60" /> 
    <value id="Lizard" 									order="60" /> 
    <value id="Insect" 									order="60" />   
    <value id="Raider" 									order="60" /> 
    </group>	
	
  <group
    id="Immune">
    <value id="Poison"/>		<!-- Indicates that the hero is Immune to Poison Damage -->
    <value id="Radiation"/>		<!-- Indicates that the hero is Immune to Radiation Damage -->
    </group>	

  <!-- ItemMod tags (from GearMod)-->
  <group
    id="ItemMod"
	dynamic="yes">
    <value id="ItemModHelper" name="Item Mod Helper"/>
    </group>

  <group
    id="ItemModLimit"
	dynamic="yes">
    <value id="ArmorHeadOnly" name="Applies to Head Armor Only"/>
    <value id="ArmorTorsoOnly" name="Applies to Torso Armor Only"/>
    <value id="ArmorArmOnly" name="Applies to Arm Armor Only"/>
    <value id="ArmorLegOnly" name="Applies to Leg Armor Only"/>
    </group>
	
  <group
    id="ItemModCatAllowed"
	dynamic="yes">
    <value id="Gear" name="Gear" />
	
	<!-- identifies a mod for a piece of apparel -->
    <value id="Clothing" name="Clothing" />							
	
	<!-- identifies a mod for Armor -->
    <value id="Upgrade" name="Upgrade (Armor)" />
    <value id="Material" name="Material" />	
    <value id="Utility" name="Utility" />	
	
	<!-- identifies a mod for a Melee Weapon -->
    <value id="UpgradeMelee" name="Upgrade (Melee Weapon)" />		
	
	<!-- identifies a mod for Ranged Weapons -->
    <value id="RangedReceiver" name="Receiver" />
    <value id="RangedBarrel" name="Barrel" />
    <value id="RangedGrip" name="Grip" />
    <value id="RangedMag" name="Magazine" />
    <value id="RangedSights" name="Sights" />
    <value id="RangedStock" name="Stock" />
    <value id="RangedMuzzle" name="Muzzle" />
	
	<!-- identifies a mod for Energy Weapons -->
    <value id="Capacitor" name="Capacitor" />
	
	<!-- identifies a mod for Power Armor -->
    <value id="UpgradePA" name="Upgrade (Power Armor)" />
    <value id="System" name="System" />
    <value id="Plating" name="Plating" />
	
	<!-- identifies a mod for Robots -->
    <value id="RobotHead" 		name="Robot Head" />	
    <value id="RobotTorso" 		name="Robot Torso" />	
    <value id="RobotArm" 		name="Robot Arm" />	
    <value id="RobotLeg" 		name="Robot Leg" />
    <value id="RobotInternal" 	name="Robot Internal Torso" />
    <value id="RobotModule" 	name="Robot Module" />
	
	<!-- identifies a mod for a Bow or Crossbow -->
    <value id="Frame" name="Frame" />	
	
    </group>		

  <!-- Item Mod Categories  -->
  <group
    id="ItemModCat"
	inherit="ItemModCatAllowed">
    </group>

  <!-- ItemModSpecWpn tags 
       Item mod is specific to an Individual weapon 
	   -->
  <group
    id="ItemModSpecArmor"
	dynamic="yes">
    <value id="Any" name=""/>
    </group>
	
  <!-- Item Mod Categories  -->
  <group
    id="ItemModArmorType"
	inherit="ArmorType">
    </group>
	
  <!-- Item Mod Categories  -->
  <group
    id="ItemModWpnType"
	inherit="WeaponType">
    </group>
	
  <!-- Item Mod Armor Location Categories  -->
  <group
    id="ItemModArmorLoc"
	inherit="ArmorLoc">
    </group>
	
  <!-- ItemModSpecWpn tags 
       Item mod is specific to an Individual weapon 
	   -->
  <group
    id="ItemModSpecWpn"
	dynamic="yes">
    <value id="Any" name=""/>
    </group>

  <!-- ItemModSpecWpn tags 
       Item mod is specific to an Individual weapon 
	   -->
  <group
    id="ItemModAllow"
	dynamic="yes"
	inherit="ItemMod">
    </group>
	
  <group
    id="ItemModSelected"
	inherit="ItemModCatAllowed">
    </group>
	
  </document>
